openapi: '3.0.0'
info:
  title: Configurations
  contact:
    name: tyntec API Support
    url: http://www.tyntec.com/support
    email: support@tyntec.com
  version: '2.11'
  x-repository: https://github.com/tyntec/api-collection/blob/master/conversations
  x-major-version: v2
  x-postman-collection: postman.zip
servers:
  - url: https://api.tyntec.com/chat-api/v2
security:
  - ApiKeyAuth: [ ]
tags:
  - name: "Configurations"
    description: |
      The Configurations allows you setup certain parts of a channels settings.

      Such as callback settings, credentials (where appropriate)
paths:
  /configurations:
    get:
      tags:
        - "Configurations"
      summary: List all applications
      operationId: listApplications
      description: Lists all applications configured for the APIKey
      responses:
        200:
          description: List of applications. Will never be empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: apikey
      description: |
        The API key used for this operation. We check as well that the API key has the phone number
        (either on sending messages or interacting with other phone number based features) assigned.
  responses:
    Default:
      description: Default response in case of any other error. Please check the error object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    BadRequest:
      description: The request does not match our expectations. Please check the Problems object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 400
            violations: [
              {
                field: validate.request.whatsapp.contentType,
                message: must not be empty
              }
            ]
            title: Constraint Violation
  schemas:
    EventTypes:
      type: string
      description: Determines which kind of event is emitted by the API
      enum:
        - MoMessage
        - MoMessage::Postback
        - MessageStatus::accepted
        - MessageStatus::channelFailed
        - MessageStatus::deleted
        - MessageStatus::delivered
        - MessageStatus::failed
        - MessageStatus::seen
        - MessageStatus::unknown
    Problem:
      type: object
      additionalProperties: true
      description: The problem object follows the RFC-7807 (https://tools.ietf.org/html/rfc7807)
      required:
        - type
        - title
        - status
        - detail
      properties:
        type:
          description: A URI reference [RFC3986] that identifies the problem type
          example: https://docs.tyntec.com/problems/DataNotParseable
          type: string
        title:
          type: string
          example: Data given was not parseable
          description: A short, human-readable summary of the problem type.
        status:
          description: The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem.
          type: string
          example: 400
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: |
            Unexpected end-of-input: expected close marker for Object (start marker at [Source: UNKNOWN; line: -1, column: -1) at [Source: UNKNOWN; line: 1, column: 97]
    DefaultApplicationUpdate:
      type: object
      description: Update of the default application
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
      example:
        webhooks:
          - events:
              - MoMessage
            callbackUrl: https://some-call-back.service.com
          - events:
              - MessageStatus::deleted
              - MessageStatus::accepted
            callbackUrl: https://some-other-call-back.service.com
    ApplicationList:
      type: array
      description: List of configured applications. Never be empty
      items:
        anyOf:
          - $ref: '#/components/schemas/DefaultApplicationResponse'
      minItems: 1
    DefaultApplicationResponse:
      type: object
      description: The default application
      properties:
        id:
          type: string
          description: The default application ID
          enum:
            - default
        name:
          type: string
          description: The default application name
          enum:
            - Default Application
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
          minLength: 1
      example:
        id: default
        name: Default Application
        webhooks:
          - events:
              - MoMessage
            callbackUrl: https://some-call-back.service.com
          - events:
              - MessageStatus::deleted
              - MessageStatus::accepted
            callbackUrl: https://some-other-call-back.service.com
    Webhook:
      description: >
        A webhook associates one or more event types to a callback URL. In other words,
        it specifies where the events of those types should be forwarded to.
      type: object
      properties:
        events:
          description: >
            The types of events that this webhook should be triggered. Note that, although mandatory,
            the array can be empty. In such a case, the webhook will be triggered on every
            event, if no other webhook specific to the type of the event exists.
          type: array
          items:
            $ref: "#/components/schemas/EventTypes"
          minLength: 0
        callbackUrl:
          type: string
          pattern: "^https://.*"
          description: The URL to forward the event to. Callback URLs should start with 'https://'.
          example:
            https://some-call-back.service.com
      example:
        events:
          - MessageStatus::deleted
          - MessageStatus::accepted
        callbackUrl: https://some-other-call-back.service.com
